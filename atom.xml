<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>oldmaspicyrabbit&#39;s blog</title>
  
  
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="https://oldmaspicyrabbit.github.io/blog/"/>
  <updated>2020-01-29T04:45:49.168Z</updated>
  <id>https://oldmaspicyrabbit.github.io/blog/</id>
  
  <author>
    <name>oldmaspicyrabbit</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>部署hexo到GitHub Pages的一些问题</title>
    <link href="https://oldmaspicyrabbit.github.io/blog/2020/01/28/%E9%83%A8%E7%BD%B2hexo%E5%88%B0GitHub-Pages%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/"/>
    <id>https://oldmaspicyrabbit.github.io/blog/2020/01/28/%E9%83%A8%E7%BD%B2hexo%E5%88%B0GitHub-Pages%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/</id>
    <published>2020-01-28T22:31:44.000Z</published>
    <updated>2020-01-29T04:45:49.168Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p>第一次使用hexo搭建借助github pages搭建博客网站，如何搭建网上的教程有很多。<br>简要的描述，主要有三个部分：</p><ul><li>安装node, hexo, gitbash</li><li>创建hexo的站点文件，主要是hexo init </li><li>将hexo的站点文件host到 github pages<br>第一部分安装相关软件的，我暂时没碰到什么问题，所以直接略过了，下面会介绍后面两个部分中遇到的问题以及我是如何解决的。</li></ul><h2 id="创建hexo的站点文件–问题以及解决方法"><a href="#创建hexo的站点文件–问题以及解决方法" class="headerlink" title="创建hexo的站点文件–问题以及解决方法"></a>创建hexo的站点文件–问题以及解决方法</h2><p>在第二部分，创建hexo站点文件时，执行hexo init出现了几个问题，在网上没有怎么碰到：</p><h3 id="问题1：git-clone-时-error-RPC-failed-curl-56-OpenSSL-SSL-read-SSL-ERROR-SYSCALL-errno-10054"><a href="#问题1：git-clone-时-error-RPC-failed-curl-56-OpenSSL-SSL-read-SSL-ERROR-SYSCALL-errno-10054" class="headerlink" title="问题1：git clone 时 error: RPC failed; curl 56 OpenSSL SSL_read: SSL_ERROR_SYSCALL, errno 10054"></a>问题1：git clone 时 error: RPC failed; curl 56 OpenSSL SSL_read: SSL_ERROR_SYSCALL, errno 10054</h3><p>这部分具体记录已经丢失了，但是出现的问题日志，主要是这一条，导致每次git clone都失败，hexo init直接失败。<br>WARN git clone failed. Copying data instead<br>WARN Failed to install dependencies. Please run ‘npm install’ manually!<br><strong>解决的办法</strong>：<br>在网上搜索了下，虽然给出的直接解决办法是 git config http.sslVerify “false”<br>但是似乎总是会在download dependencies的时候卡住，还是会失败。<br>所以后面继续搜索，找到了hexo的github上的issue的<a href="https://github.com/hexojs/hexo/issues/2646" target="_blank" rel="noopener">类似问题-hexo init,but no file created</a>的回复：<br>Could you please try to clone the repo <a href="https://github.com/hexojs/hexo-starter" target="_blank" rel="noopener">https://github.com/hexojs/hexo-starter</a> , then run npm install inside the folder?<br>验证过后，发现问题似乎解决了，站点文件都有，唯一的问题是gitclone的文件夹下会有.git文件，而我们是需要import到自己的github的repository中的，而且如果直接git clone的话，文件夹名仍然是hexo-starter，所以需要用git clone <a href="https://github.com/hexojs/hexo-starter" target="_blank" rel="noopener">https://github.com/hexojs/hexo-starter</a>  yourFolderName, 文件夹名会是youFolderName。</p><h3 id="问题2-hexo-generate时提示WARN-No-layout-index-html-1037且hexo-s后无法正常显示，而是显示的是空白页面。"><a href="#问题2-hexo-generate时提示WARN-No-layout-index-html-1037且hexo-s后无法正常显示，而是显示的是空白页面。" class="headerlink" title="问题2: hexo generate时提示WARN No layout: index.html #1037且hexo s后无法正常显示，而是显示的是空白页面。"></a>问题2: hexo generate时提示WARN No layout: index.html #1037且hexo s后无法正常显示，而是显示的是空白页面。</h3><p><strong>解决的办法</strong>：在github上找到了类似的<a href="https://github.com/hexojs/hexo/issues/1037" target="_blank" rel="noopener">问题-WARN No layout: index.html</a>,解决办法也很简单粗暴：<br>Under the folder, enter: git clone <a href="https://github.com/hexojs/hexo-theme-landscape.git" target="_blank" rel="noopener">https://github.com/hexojs/hexo-theme-landscape.git</a> themes/landscape<br>那么很显然，这个问题是因为缺少themes文件造成的html无法正常生成，我在后面用Trivis CI进行build时检查build完后的deploy文件也验证发现了类似的问题，generate出来的index.html文件都是0字节，显示无法正常显示。</p><h2 id="使用Trivis-CI进行build后的branch来host站点–问题以及解决方法"><a href="#使用Trivis-CI进行build后的branch来host站点–问题以及解决方法" class="headerlink" title="使用Trivis CI进行build后的branch来host站点–问题以及解决方法"></a>使用Trivis CI进行build后的branch来host站点–问题以及解决方法</h2><p>这里需要首先弄清两个问题，github pages的种类有几种？hexo和Trivis CI和github的workflow到底是怎么样的？</p><h3 id="问题1：hexo的guidelines上的说明In-your-GitHub-repo’s-setting-navigate-to-“GitHub-Pages”-section-and-change-Source-to-gh-pages-branch-根本没法实现，因为Source是灰的"><a href="#问题1：hexo的guidelines上的说明In-your-GitHub-repo’s-setting-navigate-to-“GitHub-Pages”-section-and-change-Source-to-gh-pages-branch-根本没法实现，因为Source是灰的" class="headerlink" title="问题1：hexo的guidelines上的说明In your GitHub repo’s setting, navigate to “GitHub Pages” section and change Source to gh-pages branch.根本没法实现，因为Source是灰的"></a>问题1：hexo的guidelines上的说明In your GitHub repo’s setting, navigate to “GitHub Pages” section and change Source to gh-pages branch.根本没法实现，因为Source是灰的</h3><p>我被这个问题坑了很久，因为前面提到的themes的files缺失导致html文件时空的，我一直以为是这个原因导致的，后来才发现这根本是两个问题，前面的是build就有的问题。而这里这个是deployment的问题，是两回事。<br><strong>解决的办法</strong>：在hexo官网上上找到了<a href="https://hexo.io/docs/github-pages" target="_blank" rel="noopener">解决办法-Project page</a><br>If you prefer to have a project page on GitHub:<br>    1. Navigate to your repo on GitHub. Go to the Settings tab. Change the Repository name so your blog is available at username.github.io/repository, repository can be any name, like blog or hexo.<br>    2. Edit your _config.yml, change the root: value to the /<repository>/ (must starts and ends with a slash, without the brackets).Commit and push.<br>所以 My Steps:<br>1.Change the repository name into “blog”, then the repository change to oldmaspicyrabbit/blog<br>2.Change the source from “master” to “gh_pages”<br>3.github pages will hint: Your site is published at <a href="https://oldmaspicyrabbit.github.io/blog/">https://oldmaspicyrabbit.github.io/blog/</a><br>4.open _config.yml file, change “root: /“ to “root: /blog/“  </p>]]></content>
    
    <summary type="html">
    
      主要记录在借助hexo和GitHub Pages的部署过程中遇到的问题以及解决办法
    
    </summary>
    
    
      <category term="hexo" scheme="https://oldmaspicyrabbit.github.io/blog/categories/hexo/"/>
    
    
      <category term="hexo" scheme="https://oldmaspicyrabbit.github.io/blog/tags/hexo/"/>
    
      <category term="Github pages" scheme="https://oldmaspicyrabbit.github.io/blog/tags/Github-pages/"/>
    
  </entry>
  
</feed>
